{"version":3,"sources":["../../src/preset/makeConfigFactory.ts"],"names":["defaultTemplateConfig","filename","ios","android","__server__","makeConfigFactory","getDefaultConfig","makeConfig","projectConfig","runtime","env","normalizedServerConfig","port","DEFAULT_PORT","host","normalizedTemplatesConfig","templates","platforms","normalizedBundleConfigs","transforms","webpackConfigs","Object","keys","bundles","forEach","bundleName","bundleConfigBuilder","bundleConfig","dev","root","normalizedBundleConfig","name","entry","type","bundleTarget","bundleType","platform","assetsDest","minify","Boolean","minifyOptions","undefined","sourceMap","app","dll","dependsOn","external","bundlePath","copyBundle","assetsPath","path","isAbsolute","join","dirname","manifestPath","providesModuleNodeModules","hasteOptions","Error","includes","map","transform","webpackConfig","server","output","sourcemapOutput","sourceMapFilename","relative","plugins","concat","filter","bundleMode","config"],"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","sourcesContent":["import get from 'lodash.get';\nimport merge from 'lodash.merge';\nimport webpack from 'webpack';\nimport path from 'path';\nimport {\n  Runtime,\n  EnvOptions,\n  BundleConfig,\n  BundleConfigBuilder,\n  ProjectConfig,\n  NormalizedProjectConfig,\n  NormalizedProjectConfigBuilder,\n  DEFAULT_PORT,\n  NormalizedBundleConfig,\n} from '../';\nimport getSourceMapPlugin from './utils/getSourceMapPlugin';\nimport {\n  NormalizedServerConfig,\n  NormalizedTemplatesConfig,\n} from '../config/types';\nimport applySingleBundleTweaks from './utils/applySingleBundleTweaks';\nimport applyMultiBundleTweaks from './utils/applyMultiBundleTweaks';\nimport getBundlePlugin from './utils/getBundlePlugin';\n\ntype GetDefaultConfig = (\n  runtime: Runtime,\n  env: EnvOptions,\n  bundleName: string,\n  normalizedProjectConfig: NormalizedProjectConfig\n) => webpack.Configuration;\n\nconst defaultTemplateConfig: NormalizedTemplatesConfig = {\n  filename: {\n    ios: '[bundleName].jsbundle',\n    android: '[bundleName].[platform].bundle',\n    __server__: '[bundleName].[platform].bundle',\n  },\n};\n\nexport default function makeConfigFactory(getDefaultConfig: GetDefaultConfig) {\n  return function makeConfig(\n    projectConfig: ProjectConfig\n  ): NormalizedProjectConfigBuilder {\n    return (runtime: Runtime, env: EnvOptions) => {\n      const normalizedServerConfig = {\n        port: env.port || get(projectConfig, 'server.port', DEFAULT_PORT),\n        host: get(projectConfig, 'server.host', 'localhost'),\n      } as NormalizedServerConfig;\n\n      const normalizedTemplatesConfig = merge(\n        {},\n        defaultTemplateConfig,\n        projectConfig.templates\n      ) as NormalizedTemplatesConfig;\n\n      const platforms = projectConfig.platforms || ['ios', 'android'];\n\n      const normalizedBundleConfigs: {\n        [bundleName: string]: NormalizedBundleConfig;\n      } = {};\n      const transforms: {\n        [bundleName: string]: BundleConfig['transform'];\n      } = {};\n      const webpackConfigs: {\n        [bundleName: string]: webpack.Configuration;\n      } = {};\n\n      Object.keys(projectConfig.bundles).forEach(bundleName => {\n        const bundleConfigBuilder: BundleConfig | BundleConfigBuilder =\n          projectConfig.bundles[bundleName];\n        const bundleConfig: BundleConfig =\n          typeof bundleConfigBuilder === 'function'\n            ? bundleConfigBuilder(env, runtime)\n            : bundleConfigBuilder;\n\n        // TODO: use minifyOptions to configure terser for basic bundle\n        const dev = bundleConfig.dev || env.dev;\n        const root = bundleConfig.root || env.root;\n        const normalizedBundleConfig: NormalizedBundleConfig = {\n          name: bundleConfig.name || bundleName,\n          entry:\n            typeof bundleConfig.entry === 'string'\n              ? [bundleConfig.entry]\n              : bundleConfig.entry,\n          type:\n            // Force basic-bundle type when serving from packager server.\n            env.bundleTarget === 'server'\n              ? 'basic-bundle'\n              : bundleConfig.type || env.bundleType || 'basic-bundle',\n          platform: bundleConfig.platform || env.platform,\n          root,\n          dev,\n          assetsDest: bundleConfig.assetsDest || env.assetsDest || '',\n          minify: bundleConfig.minify || Boolean(env.minify),\n          minifyOptions: bundleConfig.minifyOptions || undefined,\n          sourceMap:\n            typeof bundleConfig.sourceMap !== 'undefined'\n              ? bundleConfig.sourceMap\n              : true,\n          app: Boolean(bundleConfig.app),\n          dll: Boolean(bundleConfig.dll),\n          dependsOn: bundleConfig.dependsOn || [],\n          external: bundleConfig.bundlePath\n            ? {\n                copyBundle: Boolean(bundleConfig.copyBundle),\n                bundlePath: bundleConfig.bundlePath,\n                assetsPath: bundleConfig.assetsPath\n                  ? path.isAbsolute(bundleConfig.assetsPath)\n                    ? bundleConfig.assetsPath\n                    : path.join(\n                        path.dirname(bundleConfig.bundlePath),\n                        bundleConfig.assetsPath\n                      )\n                  : path.dirname(bundleConfig.bundlePath),\n                manifestPath: bundleConfig.manifestPath,\n              }\n            : false,\n          providesModuleNodeModules: bundleConfig.providesModuleNodeModules || [\n            'react-native',\n          ],\n          hasteOptions: bundleConfig.hasteOptions || {},\n        };\n\n        // Make sure user supplied manifestPath if the bundle is DLL. Otherwise, we wouldn't\n        // have any info what the bundle contains.\n        if (\n          normalizedBundleConfig.dll &&\n          normalizedBundleConfig.external &&\n          !normalizedBundleConfig.external.manifestPath\n        ) {\n          throw new Error(\n            `Missing 'manifestPath' for external DLL '${normalizedBundleConfig.name}'`\n          );\n        }\n\n        // Make sure the target platform is supported. Do not run this check when target is set\n        // to server, since the initial configuration loading is done with `platform` set\n        // to \"\".\n        if (\n          !platforms.includes(normalizedBundleConfig.platform) &&\n          env.bundleTarget !== 'server'\n        ) {\n          throw new Error(\n            `Platform \"${\n              normalizedBundleConfig.platform\n            }\" is not supported - only: ${platforms\n              .map(platform => `\"${platform}\"`)\n              .join(', ')} are available.`\n          );\n        }\n\n        normalizedBundleConfigs[\n          normalizedBundleConfig.name\n        ] = normalizedBundleConfig;\n        transforms[normalizedBundleConfig.name] = bundleConfig.transform;\n      });\n\n      Object.keys(normalizedBundleConfigs).forEach(bundleName => {\n        const normalizedBundleConfig = normalizedBundleConfigs[bundleName];\n\n        let webpackConfig = getDefaultConfig(\n          runtime,\n          env,\n          normalizedBundleConfig.name,\n          {\n            server: normalizedServerConfig,\n            platforms,\n            templates: normalizedTemplatesConfig,\n            bundles: {\n              // Pass only it's own normalized bundle config\n              [normalizedBundleConfig.name]: normalizedBundleConfig,\n            },\n            webpackConfigs: {},\n          }\n        );\n\n        if (env.assetsDest) {\n          webpackConfig.output!.path = path.isAbsolute(env.assetsDest)\n            ? env.assetsDest\n            : path.join(normalizedBundleConfig.root, env.assetsDest);\n        }\n\n        if (env.sourcemapOutput) {\n          webpackConfig.output!.sourceMapFilename = path.isAbsolute(\n            env.sourcemapOutput\n          )\n            ? path.relative(webpackConfig.output!.path!, env.sourcemapOutput)\n            : path.relative(\n                webpackConfig.output!.path!,\n                path.join(normalizedBundleConfig.root, env.sourcemapOutput)\n              );\n        }\n\n        webpackConfig.plugins = (webpackConfig.plugins || [])\n          .concat(getSourceMapPlugin(\n            normalizedBundleConfig,\n            normalizedServerConfig\n          ) as webpack.Plugin)\n          .filter(Boolean);\n\n        webpackConfig.plugins = (webpackConfig.plugins || []).concat(\n          getBundlePlugin(env, normalizedBundleConfig)\n        );\n\n        if (env.bundleMode === 'single-bundle') {\n          applySingleBundleTweaks(\n            env,\n            normalizedTemplatesConfig,\n            normalizedBundleConfig,\n            webpackConfig\n          );\n        } else if (env.bundleMode === 'multi-bundle') {\n          applyMultiBundleTweaks(\n            env,\n            normalizedTemplatesConfig,\n            normalizedBundleConfig,\n            webpackConfig,\n            normalizedBundleConfigs\n          );\n        }\n\n        const transform = transforms[bundleName];\n        if (transform) {\n          webpackConfig =\n            transform({\n              bundleName: normalizedBundleConfig.name,\n              config: webpackConfig,\n              env,\n              runtime,\n            }) || webpackConfig;\n        }\n\n        webpackConfigs[normalizedBundleConfig.name] = webpackConfig;\n      });\n\n      return {\n        server: normalizedServerConfig,\n        platforms,\n        templates: normalizedTemplatesConfig,\n        bundles: normalizedBundleConfigs,\n        webpackConfigs,\n      };\n    };\n  };\n}\n"],"file":"makeConfigFactory.js"}