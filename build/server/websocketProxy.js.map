{"version":3,"sources":["../../src/server/websocketProxy.ts"],"names":["createWebSocketProxy","webSocketServer","path","onConnection","handler","on","socket","request","url","startsWith"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA;;;AAGe,SAASA,oBAAT,CACbC,eADa,EAEbC,IAFa,EAGG;AAAA;AAAA;AAChB,SAAO;AACLC,IAAAA,YAAY,CAACC,OAAD,EAA6C;AAAA;AAAA;AACvDH,MAAAA,eAAe,CAACI,EAAhB,CAAmB,YAAnB,EAAiC,CAACC,MAAD,EAASC,OAAT,KAAqB;AAAA;AAAA;;AACpD,YAAI,2BAAAA,OAAO,CAACC,GAAR,gCAAeD,OAAO,CAACC,GAAR,CAAYC,UAAZ,CAAuBP,IAAvB,CAAf,CAAJ,EAAiD;AAAA;AAAA;AAC/CE,UAAAA,OAAO,CAACE,MAAD,EAASC,OAAT,CAAP;AACD,SAFD;AAAA;AAAA;AAGD,OAJD;AAKD;;AAPI,GAAP;AASD","sourcesContent":["import WebSocket from 'ws';\nimport { IncomingMessage } from 'http';\n\ntype WebsocketProxyOnConnectionHandler = (\n  socket: WebSocket,\n  request: IncomingMessage\n) => void;\nexport type WebSocketProxy = {\n  onConnection(handler: WebsocketProxyOnConnectionHandler): void;\n};\n\n/**\n * Proxy connection from single WebSocketServer by given path.\n */\nexport default function createWebSocketProxy(\n  webSocketServer: WebSocket.Server,\n  path: string\n): WebSocketProxy {\n  return {\n    onConnection(handler: WebsocketProxyOnConnectionHandler) {\n      webSocketServer.on('connection', (socket, request) => {\n        if (request.url && request.url.startsWith(path)) {\n          handler(socket, request);\n        }\n      });\n    },\n  };\n}\n"],"file":"websocketProxy.js"}