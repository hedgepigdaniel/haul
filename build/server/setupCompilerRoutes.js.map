{"version":3,"sources":["../../src/server/setupCompilerRoutes.ts"],"names":["setupCompilerRoutes","runtime","server","compiler","port","bundleNames","platforms","hasRunAdbReverse","hasWarnedDelta","bundleRegex","route","method","path","options","validate","query","Joi","object","platform","string","minify","boolean","dev","unknown","handler","request","h","test","Promise","resolve","filename","emit","Compiler","Events","REQUEST_FILE","callback","result","makeResponseFromCompilerResults","name","bundleName","type","bundleType","url","href","message","logger","error","Boom","badImplementation","includes","map","join","badRequest","info","warn","REQUEST_BUNDLE","errors","response","code","file","notFound","toString","Buffer","from","data","mimeType","length","header","filter"],"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","sourcesContent":["import Boom from '@hapi/boom';\nimport Hapi from '@hapi/hapi';\nimport Joi from '@hapi/joi';\n// @ts-ignore\nimport Compiler from '@haul-bundler/core-legacy/build/compiler/Compiler';\nimport runAdbReverse from '../utils/runAdbReverse';\nimport createDeltaBundle from './createDeltaBundle';\nimport Runtime from '../runtime/Runtime';\nimport getBundleDataFromURL from '../utils/getBundleDataFromURL';\n\nexport default function setupCompilerRoutes(\n  runtime: Runtime,\n  server: Hapi.Server,\n  compiler: any,\n  {\n    port,\n    bundleNames,\n    platforms,\n  }: { port: number; bundleNames: string[]; platforms: string[] }\n) {\n  let hasRunAdbReverse = false;\n  let hasWarnedDelta = false;\n  const bundleRegex = /^([^.]+)(\\.[^.]+)?\\.(bundle|delta)$/;\n\n  server.route({\n    method: 'GET',\n    path: '/{any*}',\n    options: {\n      validate: {\n        query: Joi.object({\n          platform: Joi.string(),\n          minify: Joi.boolean(),\n          dev: Joi.boolean(),\n        }).unknown(true),\n      },\n    },\n    handler: async (request, h) => {\n      if (!bundleRegex.test(request.path)) {\n        return new Promise(resolve => {\n          const filename = request.path;\n          compiler.emit(Compiler.Events.REQUEST_FILE, {\n            filename,\n            callback: (result: {\n              file?: any;\n              errors: string[];\n              mimeType: string;\n            }) => {\n              resolve(makeResponseFromCompilerResults(h, { filename }, result));\n            },\n          });\n        });\n      } else {\n        const {\n          name: bundleName,\n          platform,\n          type: bundleType,\n        } = getBundleDataFromURL(request.url.href);\n        if (!platform) {\n          const message = `Cannot detect platform parameter in URL: ${request.path}`;\n          runtime.logger.error(message);\n          return Boom.badImplementation(message);\n        }\n\n        if (!platforms.includes(platform)) {\n          const message = `Platform \"${platform}\" is not supported - only: ${platforms\n            .map(platform => `\"${platform}\"`)\n            .join(', ')} are available.`;\n          runtime.logger.error(message);\n          return Boom.badRequest(message);\n        }\n\n        runtime.logger.info(\n          `Compiling ${\n            bundleType === 'bundle' ? bundleType : `${bundleType} bundle`\n          } \"${bundleName}\" for platform ${platform}`\n        );\n\n        if (!hasRunAdbReverse && platform === 'android') {\n          hasRunAdbReverse = true;\n          await runAdbReverse(runtime, port);\n        }\n\n        if (bundleType === 'delta' && !hasWarnedDelta) {\n          runtime.logger.warn(\n            'Your app requested a delta bundle, this has minimal support in Haul'\n          );\n          hasWarnedDelta = true;\n        }\n\n        return new Promise(resolve => {\n          const filename = `${bundleName}.${platform}.bundle`;\n          compiler.emit(Compiler.Events.REQUEST_BUNDLE, {\n            filename,\n            platform,\n            callback: (result: {\n              file?: any;\n              errors: string[];\n              mimeType: string;\n            }) => {\n              resolve(\n                makeResponseFromCompilerResults(\n                  h,\n                  { filename, bundleType, bundleNames },\n                  result\n                )\n              );\n            },\n          });\n        });\n      }\n    },\n  });\n}\n\nfunction makeResponseFromCompilerResults(\n  h: Hapi.ResponseToolkit,\n  {\n    filename,\n    bundleType,\n    bundleNames,\n  }: { filename: string; bundleType?: string; bundleNames?: string[] },\n  result: {\n    file?: any;\n    errors: string[];\n    mimeType: string;\n  }\n) {\n  if (result.errors) {\n    return h.response({ errors: result.errors }).code(500);\n  } else if (!result.file) {\n    return Boom.notFound(`File ${filename} not found`);\n  }\n\n  let file;\n  if (bundleType === 'delta') {\n    // We have a bundle, but RN is expecting a delta bundle.\n    // Convert full bundle into the simplest delta possible.\n    // This will load slower in RN, but it won't error, which is\n    // nice for automated use-cases where changing the dev setting\n    // is not possible.\n    file = createDeltaBundle(result.file.toString());\n  } else {\n    file =\n      result.file.type === 'Buffer'\n        ? Buffer.from(result.file.data)\n        : result.file;\n  }\n\n  const response = h\n    .response(file)\n    .type(result.mimeType)\n    .code(200);\n\n  // Add bundle names when running in multi-bundle mode.\n  if (bundleNames && bundleNames.length > 1) {\n    response.header(\n      'X-multi-bundle',\n      bundleNames.filter(name => !filename.includes(name)).join(',')\n    );\n  }\n\n  return response;\n}\n"],"file":"setupCompilerRoutes.js"}