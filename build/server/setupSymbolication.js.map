{"version":3,"sources":["../../src/server/setupSymbolication.ts"],"names":["getRequestedFrames","payload","stack","newStack","filter","stackLine","methodName","unwantedStackRegExp","RegExp","test","evalLine","indexOf","newMethodName","slice","sourceMapConsumers","getSourceMapConsumers","runtime","platform","bundleNames","baseUrl","Promise","all","map","bundleName","createSourceMapConsumer","reduce","acc","sourceMapConsumer","index","logger","info","join","url","response","sourceMap","text","warn","undefined","SourceMapConsumer","err","error","setupSymbolication","server","route","method","path","options","validate","Joi","array","items","any","handler","request","h","unconvertedFrames","length","code","file","consumers","host","split","convertedFrames","originalFrame","lineNumber","column","name","targetConsumer","lookup","originalPositionFor","line","source"],"mappingseA;;;AAGA,SAASA,kBAAT,CACEC,OADF,EAE2B;AAAA;AACzB,QAAMC,KAAK,2BAAGD,OAAO,CAACC,KAAX,CAAX;AADyB;;AAEzB,MAAI,CAACA,KAAL,EAAY;AAAA;AAAA;AAAA,WAAO,IAAP;AAAY,GAAxB;AAAA;AAAA;;AAEA,QAAMC,QAAQ,2BAAGD,KAAK,CAACE,MAAN,CAAaC,SAAS,IAAI;AAAA;AACzC,UAAM;AAAEC,MAAAA;AAAF,gCAAiBD,SAAjB,CAAN;AACA,UAAME,mBAAmB,2BAAG,IAAIC,MAAJ,CAC1B,0CAD0B,CAAH,CAAzB;AAFyC;;AAMzC,QAAID,mBAAmB,CAACE,IAApB,CAAyBH,UAAzB,CAAJ,EAA0C;AAAA;AAAA;AAAA,aAAO,KAAP;AAAa,KAAvD;AAAA;AAAA,KANyC,CAMe;;;AAExD,UAAMI,QAAQ,2BAAGJ,UAAU,CAACK,OAAX,CAAmB,WAAnB,CAAH,CAAd;AARyC;;AASzC,QAAID,QAAQ,GAAG,CAAC,CAAhB,EAAmB;AAAA;AACjB,YAAME,aAAa,4BAAGN,UAAU,CAACO,KAAX,CAAiBH,QAAQ,GAAG,CAA5B,CAAH,CAAnB,CADiB,CACqC;;AADrC;AAEjBL,MAAAA,SAAS,CAACC,UAAV,GAAuBM,aAAvB,CAFiB,CAEqB;AACvC,KAHD;AAAA;AAAA;;AATyC;AAazC,WAAO,IAAP;AACD,GAdgB,CAAH,CAAd;AAJyB;AAoBzB,SAAOT,QAAP;AACD;;AAQD,IAAIW,kBAAsC,4BAAG,EAAH,CAA1C;;AAEA,eAAeC,qBAAf,CACEC,OADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,OAJF,EAK+B;AAAA;AAAA;;AAC7B,MAAI,CAACL,kBAAkB,CAACG,QAAD,CAAvB,EAAmC;AAAA;AAAA;AACjC;AACAH,IAAAA,kBAAkB,CAACG,QAAD,CAAlB,GAA+B,CAAC,MAAMG,OAAO,CAACC,GAAR,CACpCH,WAAW,CAACI,GAAZ,CAAgBC,UAAU,IACxB;AAAA;AAAA;AAAA,aAAAC,uBAAuB,CACrBR,OADqB,EAEpB,GAAEG,OAAQ,GAAEI,UAAW,IAAGN,QAAS,aAFf,CAAvB;AAGC,KAJH,CADoC,CAAP,EAO5BQ,MAP4B,CAQ7B,CAACC,GAAD,EAAMC,iBAAN,EAAyBC,KAAzB,KAAoC;AAAA;AAAA;AAAA,eAClC,GAAGF,GAD+B;AAElC,SAACR,WAAW,CAACU,KAAD,CAAZ,GAAsBD;AAFY;AAGnC,KAX4B,EAY7B,EAZ6B,CAA/B;AAFiC;AAiBjCX,IAAAA,OAAO,CAACa,MAAR,CAAeC,IAAf,CACG,4BAA2Bb,QAAS,aAAYC,WAAW,CAACa,IAAZ,CAC/C,IAD+C,CAE/C,UAHJ;AAKD,GAtBD;AAAA;AAAA;;AAD6B;AAyB7B,SAAOjB,kBAAP;AACD;AAED;;;;;AAGA,eAAeU,uBAAf,CAAuCR,OAAvC,EAAyDgB,GAAzD,EAAsE;AAAA;AACpE,QAAMC,QAAQ,4BAAG,MAAM,wBAAMD,GAAN,CAAT,CAAd;AACA,QAAME,SAAS,4BAAG,MAAMD,QAAQ,CAACE,IAAT,EAAT,CAAf,CAFoE,CAIpE;;AAJoE;;AAKpE,MAAI,CAACD,SAAL,EAAgB;AAAA;AAAA;AACdlB,IAAAA,OAAO,CAACa,MAAR,CAAeO,IAAf,CAAoB,4BAApB;AADc;AAEd,WAAOC,SAAP;AACD,GAHD;AAAA;AAAA,GALoE,CAUpE;;;AAVoE;;AAWpE,MAAI;AAAA;AACF,WAAO,IAAIC,4BAAJ,CAAsBJ,SAAtB,CAAP;AACD,GAFD,CAEE,OAAOK,GAAP,EAAY;AAAA;AACZvB,IAAAA,OAAO,CAACa,MAAR,CAAeW,KAAf,CAAqB,4CAArB,EAAmED,GAAnE;AADY;AAEZ,WAAOF,SAAP;AACD;AACF;;AAEc,SAASI,kBAAT,CACbzB,OADa,EAEb0B,MAFa,EAGb;AAAExB,EAAAA;AAAF,CAHa,EAIb;AAAA;AAAA;AACAwB,EAAAA,MAAM,CAACC,KAAP,CAAa;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,IAAI,EAAE,cAFK;AAGXC,IAAAA,OAAO,EAAE;AACPC,MAAAA,QAAQ,EAAE;AACR9C,QAAAA,OAAO,EAAE;AACPC,UAAAA,KAAK,EAAE8C,aAAIC,KAAJ,GAAYC,KAAZ,CAAkBF,aAAIG,GAAJ,EAAlB;AADA;AADD;AADH,KAHE;AAUXC,IAAAA,OAAO,EAAE,OAAOC,OAAP,EAAgBC,CAAhB,KAAsB;AAAA;AAC7B;AACA,YAAMC,iBAAiB,4BAAGvD,kBAAkB,CAC1CqD,OAAO,CAACpD,OADkC,CAArB,CAAvB;AAF6B;;AAK7B,UAAI,4BAACsD,iBAAD,gCAAsBA,iBAAiB,CAACC,MAAlB,KAA6B,CAAnD,CAAJ,EAA0D;AAAA;AAAA;AACxDxC,QAAAA,OAAO,CAACa,MAAR,CAAeO,IAAf,CAAoB,0CAApB;AADwD;AAExD,eAAOkB,CAAC,CAACrB,QAAF,GAAawB,IAAb,CAAkB,GAAlB,CAAP;AACD,OAHD;AAAA;AAAA;;AAKA,YAAM;AAAExC,QAAAA;AAAF,mCAAe,mCAAqBsC,iBAAiB,CAAC,CAAD,CAAjB,CAAqBG,IAA1C,CAAf,CAAN;AAV6B;;AAW7B,UAAI,CAACzC,QAAL,EAAe;AAAA;AAAA;AACbD,QAAAA,OAAO,CAACa,MAAR,CAAeO,IAAf,CACG,8CAA6CmB,iBAAiB,CAAC,CAAD,CAAjB,CAAqBG,IAAK,EAD1E;AADa;AAIb,eAAOJ,CAAC,CAACrB,QAAF,GAAawB,IAAb,CAAkB,GAAlB,CAAP;AACD,OALD;AAAA;AAAA,OAX6B,CAkB7B;;;AACA,YAAME,SAAS,4BAAG,MAAM5C,qBAAqB,CAC3CC,OAD2C,EAE3CC,QAF2C,EAG3CC,WAH2C,EAI1C,oBAAmBmC,OAAO,CAACvB,IAAR,CAAa8B,IAAb,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAgC,GAJT,CAA9B,CAAf;AAnB6B;;AA0B7B,UAAI,4BAACF,SAAD,gCAAc,CAACA,SAAS,CAAC1C,QAAD,CAAxB,CAAJ,EAAwC;AAAA;AAAA;AACtCD,QAAAA,OAAO,CAACa,MAAR,CAAeW,KAAf,CAAqB,sCAArB;AADsC;AAEtC,eAAOc,CAAC,CAACrB,QAAF,GAAawB,IAAb,CAAkB,GAAlB,CAAP;AACD,OAHD;AAAA;AAAA;;AAKA,UAAIK,eAAwC,4BAAG,EAAH,CAA5C;AA/B6B;;AAgC7B,UAAI;AAAA;AACF;AACAA,QAAAA,eAAe,GAAGP,iBAAiB,CAACjC,GAAlB,CACfyC,aAAD,IAA0C;AAAA;AAAA;;AACxC,cACE,4BAAAA,aAAa,CAACC,UAAd,KAA6B,IAA7B,iCACAD,aAAa,CAACE,MAAd,KAAyB,IADzB,CADF,EAGE;AAAA;AAAA;AACA,mBAAOF,aAAP;AACD,WALD;AAAA;AAAA;;AAOA,gBAAM;AAAEG,YAAAA,IAAI,EAAE3C;AAAR,uCAAuB,mCAC3BwC,aAAa,CAACL,IADa,CAAvB,CAAN;AARwC;;AAWxC,cAAI,CAACnC,UAAL,EAAiB;AAAA;AAAA;AACf,mBAAOwC,aAAP;AACD,WAFD;AAAA;AAAA;;AAIA,gBAAMI,cAAc,4BAAGR,SAAS,CAAC1C,QAAD,CAAT,CAAoBM,UAApB,CAAH,CAApB;AAfwC;;AAgBxC,cAAI,CAAC4C,cAAL,EAAqB;AAAA;AAAA;AACnBnD,YAAAA,OAAO,CAACa,MAAR,CAAeO,IAAf,CACG,yBAAwBb,UAAW,sBADtC;AADmB;AAInB,mBAAOwC,aAAP;AACD,WALD;AAAA;AAAA,WAhBwC,CAuBxC;;;AACA,gBAAMK,MAAM,4BAAGD,cAAc,CAACE,mBAAf,CAAmC;AAChDC,YAAAA,IAAI,EAAEP,aAAa,CAACC,UAD4B;AAEhDC,YAAAA,MAAM,EAAEF,aAAa,CAACE;AAF0B,WAAnC,CAAH,CAAZ,CAxBwC,CA6BxC;AACA;;AA9BwC;;AA+BxC,cAAIG,MAAM,CAACG,MAAP,IAAiB,IAArB,EAA2B;AAAA;AAAA;AACzB;AACA;AACA,mBAAOR,aAAP;AACD,WAJD;AAAA;AAAA,WA/BwC,CAqCxC;;;AArCwC;AAsCxC,iBAAO;AACLC,YAAAA,UAAU,EAAE,4BAAAI,MAAM,CAACE,IAAP,iCAAeP,aAAa,CAACC,UAA7B,CADP;AAELC,YAAAA,MAAM,EAAE,4BAAAG,MAAM,CAACH,MAAP,iCAAiBF,aAAa,CAACE,MAA/B,CAFH;AAGLP,YAAAA,IAAI,EAAEU,MAAM,CAACG,MAHR;AAILjE,YAAAA,UAAU,EAAEyD,aAAa,CAACzD;AAJrB,WAAP;AAMD,SA7Ce,CAAlB;AA+CD,OAjDD,CAiDE,OAAOkC,KAAP,EAAc;AAAA;AACdxB,QAAAA,OAAO,CAACa,MAAR,CAAeW,KAAf,CAAqBA,KAArB;AACD,OAnF4B,CAqF7B;;;AArF6B;AAsF7B,aAAO;AAAEtC,QAAAA,KAAK,EAAE4D;AAAT,OAAP;AACD;AAjGU,GAAb;AAmGD","sourcesContent":["import Hapi from '@hapi/hapi';\nimport Joi from '@hapi/joi';\nimport Runtime from '../runtime/Runtime';\nimport { SourceMapConsumer } from 'source-map';\nimport fetch from 'node-fetch';\nimport getBundleDataFromURL from '../utils/getBundleDataFromURL';\n\ntype ReactNativeStackFrame = {\n  lineNumber: number;\n  column: number;\n  file: string;\n  methodName: string;\n};\n\ntype ReactNativeStack = Array<ReactNativeStackFrame>;\n\ntype ReactNativeSymbolicatePayload = {\n  stack: ReactNativeStack;\n};\n\n/**\n * Gets the stack frames that React Native wants us to convert.\n */\nfunction getRequestedFrames(\n  payload: ReactNativeSymbolicatePayload\n): ReactNativeStack | null {\n  const stack = payload.stack;\n  if (!stack) return null;\n\n  const newStack = stack.filter(stackLine => {\n    const { methodName } = stackLine;\n    const unwantedStackRegExp = new RegExp(\n      /(__webpack_require__|haul|eval(JS){0,1})/\n    );\n\n    if (unwantedStackRegExp.test(methodName)) return false; // we don't need those\n\n    const evalLine = methodName.indexOf('Object../');\n    if (evalLine > -1) {\n      const newMethodName = methodName.slice(evalLine + 9); // removing this prefix in method names\n      stackLine.methodName = newMethodName; // eslint-disable-line\n    }\n    return true;\n  });\n\n  return newStack;\n}\n\ntype SourceMapConsumers = {\n  [platform: string]: {\n    [bundleName: string]: SourceMapConsumer | undefined;\n  };\n};\n\nlet sourceMapConsumers: SourceMapConsumers = {};\n\nasync function getSourceMapConsumers(\n  runtime: Runtime,\n  platform: string,\n  bundleNames: string[],\n  baseUrl: string\n): Promise<SourceMapConsumers> {\n  if (!sourceMapConsumers[platform]) {\n    // eslint-disable-next-line require-atomic-updates\n    sourceMapConsumers[platform] = (await Promise.all(\n      bundleNames.map(bundleName =>\n        createSourceMapConsumer(\n          runtime,\n          `${baseUrl}${bundleName}.${platform}.bundle.map`\n        )\n      )\n    )).reduce(\n      (acc, sourceMapConsumer, index) => ({\n        ...acc,\n        [bundleNames[index]]: sourceMapConsumer,\n      }),\n      {}\n    );\n\n    runtime.logger.info(\n      `Source map consumers for ${platform} bundles: ${bundleNames.join(\n        ', '\n      )} created`\n    );\n  }\n\n  return sourceMapConsumers;\n}\n\n/**\n * Creates a SourceMapConsumer so we can query it.\n */\nasync function createSourceMapConsumer(runtime: Runtime, url: string) {\n  const response = await fetch(url);\n  const sourceMap = await response.text();\n\n  // we stop here if we couldn't find that map\n  if (!sourceMap) {\n    runtime.logger.warn('Unable to find source map.');\n    return undefined;\n  }\n\n  // feed the raw source map into our consumer\n  try {\n    return new SourceMapConsumer(sourceMap);\n  } catch (err) {\n    runtime.logger.error('There was a problem reading the source map', err);\n    return undefined;\n  }\n}\n\nexport default function setupSymbolication(\n  runtime: Runtime,\n  server: Hapi.Server,\n  { bundleNames }: { bundleNames: string[] }\n) {\n  server.route({\n    method: 'POST',\n    path: '/symbolicate',\n    options: {\n      validate: {\n        payload: {\n          stack: Joi.array().items(Joi.any()),\n        },\n      },\n    },\n    handler: async (request, h) => {\n      // grab the source stack frames\n      const unconvertedFrames = getRequestedFrames(\n        request.payload as ReactNativeSymbolicatePayload\n      );\n      if (!unconvertedFrames || unconvertedFrames.length === 0) {\n        runtime.logger.warn('Cannot symbolicate an empty stack frames');\n        return h.response().code(400);\n      }\n\n      const { platform } = getBundleDataFromURL(unconvertedFrames[0].file);\n      if (!platform) {\n        runtime.logger.warn(\n          `Cannot detect platform from initial frame: ${unconvertedFrames[0].file}`\n        );\n        return h.response().code(400);\n      }\n\n      // grab our source map consumer\n      const consumers = await getSourceMapConsumers(\n        runtime,\n        platform,\n        bundleNames,\n        `http://localhost:${request.info.host.split(':')[1]}/`\n      );\n\n      if (!consumers || !consumers[platform]) {\n        runtime.logger.error('No source map consumers were created');\n        return h.response().code(500);\n      }\n\n      let convertedFrames: ReactNativeStackFrame[] = [];\n      try {\n        // error error on the wall, who's the fairest stack of all?\n        convertedFrames = unconvertedFrames.map(\n          (originalFrame): ReactNativeStackFrame => {\n            if (\n              originalFrame.lineNumber === null ||\n              originalFrame.column === null\n            ) {\n              return originalFrame;\n            }\n\n            const { name: bundleName } = getBundleDataFromURL(\n              originalFrame.file\n            );\n            if (!bundleName) {\n              return originalFrame;\n            }\n\n            const targetConsumer = consumers[platform][bundleName];\n            if (!targetConsumer) {\n              runtime.logger.warn(\n                `SourceMapConsumer for ${bundleName} was not initialized`\n              );\n              return originalFrame;\n            }\n\n            // find the original home of this line of code.\n            const lookup = targetConsumer.originalPositionFor({\n              line: originalFrame.lineNumber,\n              column: originalFrame.column,\n            });\n\n            // If lookup fails, we get the same shape object, but with\n            // all values set to null\n            if (lookup.source == null) {\n              // It is better to gracefully return the original frame\n              // than to throw an exception\n              return originalFrame;\n            }\n\n            // convert these to a format which React Native wants\n            return {\n              lineNumber: lookup.line || originalFrame.lineNumber,\n              column: lookup.column || originalFrame.column,\n              file: lookup.source,\n              methodName: originalFrame.methodName,\n            };\n          }\n        );\n      } catch (error) {\n        runtime.logger.error(error);\n      }\n\n      // send it back to React Native\n      return { stack: convertedFrames };\n    },\n  });\n}\n"],"file":"setupSymbolication.js"}