{"version":3,"sources":["../../../src/webpack/resolvers/resolveModule.ts"],"names":["resolveModule","root","name","filePath","resolver","sync","basedir","realPath","fs","realpathSync","path","dirname"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;AAEA;;;;AAIe,SAASA,aAAT,CAAuBC,IAAvB,EAAqCC,IAArC,EAA2D;AAAA;AACxE,QAAMC,QAAQ,2BAAGC,iBAASC,IAAT,CAAe,GAAEH,IAAK,eAAtB,EAAsC;AAAEI,IAAAA,OAAO,EAAEL;AAAX,GAAtC,CAAH,CAAd;AACA,QAAMM,QAAQ,2BAAGC,YAAGC,YAAH,CAAgBN,QAAhB,CAAH,CAAd;AAFwE;AAGxE,SAAOO,cAAKC,OAAL,CAAaJ,QAAb,CAAP;AACD","sourcesContent":["import path from 'path';\nimport fs from 'fs';\nimport resolver from 'resolve';\n\n/**\n * Resolves the real path to a given module\n * We point to 'package.json', then remove it to receive a path to the directory itself\n */\nexport default function resolveModule(root: string, name: string): string {\n  const filePath = resolver.sync(`${name}/package.json`, { basedir: root });\n  const realPath = fs.realpathSync(filePath);\n  return path.dirname(realPath);\n}\n"],"file":"resolveModule.js"}