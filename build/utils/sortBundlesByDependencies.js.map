{"version":3,"sources":["../../src/utils/sortBundlesByDependencies.ts"],"names":["sortBundlesByDependencies","projectConfig","skipHostCheck","dlls","Set","host","apps","addDllDependencies","deps","forEach","depName","bundles","dependsOn","add","bundleName","dll","includes","push","Error","values","filter","Boolean"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEe,SAASA,yBAAT,CACbC,aADa,EAEb;AAAEC,EAAAA;AAAF,+BAAiD,EAAjD,CAFa,EAGH;AAAA;AACV,QAAMC,IAAiB,2BAAG,IAAIC,GAAJ,EAAH,CAAvB;AACA,MAAIC,IAAY,2BAAG,EAAH,CAAhB;AACA,QAAMC,IAAc,2BAAG,EAAH,CAApB;AAHU;;AAKV,QAAMC,kBAAkB,GAAIC,IAAD,IAAoB;AAAA;AAAA;AAC7CA,IAAAA,IAAI,CAACC,OAAL,CAAaC,OAAO,IAAI;AAAA;AAAA;AACtBH,MAAAA,kBAAkB,CAACN,aAAa,CAACU,OAAd,CAAsBD,OAAtB,EAA+BE,SAAhC,CAAlB;AADsB;AAEtBT,MAAAA,IAAI,CAACU,GAAL,CAASH,OAAT;AACD,KAHD;AAID,GALD;;AALU;;AAYV,OAAK,MAAMI,UAAX,IAAyBb,aAAa,CAACU,OAAvC,EAAgD;AAC9C,UAAM;AAAEI,MAAAA,GAAF;AAAOH,MAAAA;AAAP,gCAAqBX,aAAa,CAACU,OAAd,CAAsBG,UAAtB,CAArB,CAAN;AAD8C;;AAE9C,QAAIC,GAAJ,EAAS;AAAA;AAAA;AACPR,MAAAA,kBAAkB,CAACK,SAAD,CAAlB;AADO;AAEPT,MAAAA,IAAI,CAACU,GAAL,CAASC,UAAT;AACD,KAHD,MAGO;AAAA;AAAA;;AAAA,UAAI,CAAC,OAAD,EAAU,MAAV,EAAkB,MAAlB,EAA0BE,QAA1B,CAAmCF,UAAnC,CAAJ,EAAoD;AAAA;AAAA;AACzDT,QAAAA,IAAI,GAAGS,UAAP;AACD,OAFM,MAEA;AAAA;AAAA;AACLR,QAAAA,IAAI,CAACW,IAAL,CAAUH,UAAV;AACD;AAAA;AACF;;AAtBS;;AAwBV,MAAI,4BAACT,IAAD,gCAAS,CAACH,aAAV,CAAJ,EAA6B;AAAA;AAAA;AAC3B,UAAM,IAAIgB,KAAJ,CACJ,sGADI,CAAN;AAGD,GAJD;AAAA;AAAA;;AAxBU;AA8BV,SAAO,CAAC,GAAGf,IAAI,CAACgB,MAAL,EAAJ,EAAmBd,IAAnB,EAAyB,GAAGC,IAA5B,EAAkCc,MAAlC,CAAyCC,OAAzC,CAAP;AACD","sourcesContent":["import { NormalizedProjectConfig } from '../config/types';\n\nexport default function sortBundlesByDependencies(\n  projectConfig: NormalizedProjectConfig,\n  { skipHostCheck }: { skipHostCheck?: boolean } = {}\n): string[] {\n  const dlls: Set<string> = new Set();\n  let host: string = '';\n  const apps: string[] = [];\n\n  const addDllDependencies = (deps: string[]) => {\n    deps.forEach(depName => {\n      addDllDependencies(projectConfig.bundles[depName].dependsOn);\n      dlls.add(depName);\n    });\n  };\n\n  for (const bundleName in projectConfig.bundles) {\n    const { dll, dependsOn } = projectConfig.bundles[bundleName];\n    if (dll) {\n      addDllDependencies(dependsOn);\n      dlls.add(bundleName);\n    } else if (['index', 'main', 'host'].includes(bundleName)) {\n      host = bundleName;\n    } else {\n      apps.push(bundleName);\n    }\n  }\n\n  if (!host && !skipHostCheck) {\n    throw new Error(\n      'Cannot find webpack config `index` nor `host`. Make sure you have bundle config for `index` or `host'\n    );\n  }\n\n  return [...dlls.values(), host, ...apps].filter(Boolean);\n}\n"],"file":"sortBundlesByDependencies.js"}