{"version":3,"sources":["../../src/utils/parseEntry.ts"],"names":["resolvePath","relativeFilePathArray","map","entry","resolve","process","cwd","parseMultipleEntries","Array","isArray","Object","keys","reduce","fileArray","key","filesForEntry","push","parseEntry","path","join"],"mappingsqBAAD,IAClB;AAAA;AAAA;AAAA,SAAAA,qBAAqB,CAACC,GAAtB,CAA0BC,KAAK,IAAI;AAAA;AAAA;AAAA,yBAAKC,OAAL,CAAaC,OAAO,CAACC,GAAR,EAAb,EAA4BH,KAA5B;AAAkC,GAArE;AAAsE,CADxE;;AAGA,SAASI,oBAAT,CAA8BJ,KAA9B,EAA+D;AAAA;AAAA;;AAC7D,MAAIK,KAAK,CAACC,OAAN,CAAcN,KAAd,CAAJ,EAA0B;AAAA;AAAA;AACxB,WAAOH,WAAW,CAACG,KAAD,CAAlB;AACD,GAFD;AAAA;AAAA;;AAD6D;;AAK7D,MAAI,iCAAOA,KAAP,KAAiB,QAAjB,+BAA6BA,KAAK,KAAK,IAAvC,CAAJ,EAAiD;AAAA;AAAA;AAC/C,WAAOO,MAAM,CAACC,IAAP,CAAYR,KAAZ,EAAmBS,MAAnB,CACL,CAACC,SAAD,EAAYC,GAAZ,KAAoB;AAAA;AAClB,YAAMC,aAAa,0BAAGZ,KAAK,CAACW,GAAD,CAAR,CAAnB;AADkB;;AAElB,UAAI,OAAOC,aAAP,KAAyB,QAA7B,EAAuC;AAAA;AAAA;AACrCF,QAAAA,SAAS,CAACG,IAAV,CAAeD,aAAf;AADqC;AAErC,eAAOF,SAAP;AACD,OAHD;AAAA;AAAA;;AAFkB;AAOlBA,MAAAA,SAAS,CAACG,IAAV,CAAgB,WAAUF,GAAI,GAA9B,EAAkC,GAAGd,WAAW,CAACe,aAAD,CAAhD;AAPkB;AAQlB,aAAOF,SAAP;AACD,KAVI,EAWL,EAXK,CAAP;AAaD,GAdD;AAAA;AAAA;;AAL6D;AAqB7D,SAAOV,KAAP;AACD;;AAEc,SAASc,UAAT,CAAoBd,KAApB,EAA2D;AAAA;AAAA;;AACxE,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAAA;AAAA;AAC7B,WAAOe,cAAKC,IAAL,CAAUd,OAAO,CAACC,GAAR,EAAV,EAAyBH,KAAzB,CAAP;AACD,GAFD;AAAA;AAAA;;AADwE;;AAIxE,MAAI,0BAAAK,KAAK,CAACC,OAAN,CAAcN,KAAd,MAAyB,iCAAOA,KAAP,KAAiB,QAAjB,+BAA6BA,KAAK,KAAK,IAAvC,CAA7B,EAA2E;AAAA;AAAA;AACzE,WAAOI,oBAAoB,CAACJ,KAAD,CAApB,CAA4BgB,IAA5B,CAAiC,IAAjC,CAAP;AACD,GAFD;AAAA;AAAA;;AAJwE;AAQxE,SAAOhB,KAAP;AACD","sourcesContent":["import webpack from 'webpack';\nimport path from 'path';\n\nconst resolvePath = (relativeFilePathArray: string[]) =>\n  relativeFilePathArray.map(entry => path.resolve(process.cwd(), entry));\n\nfunction parseMultipleEntries(entry: webpack.Entry | string[]) {\n  if (Array.isArray(entry)) {\n    return resolvePath(entry);\n  }\n\n  if (typeof entry === 'object' && entry !== null) {\n    return Object.keys(entry).reduce(\n      (fileArray, key) => {\n        const filesForEntry = entry[key];\n        if (typeof filesForEntry === 'string') {\n          fileArray.push(filesForEntry);\n          return fileArray;\n        }\n\n        fileArray.push(`(chunk: ${key})`, ...resolvePath(filesForEntry));\n        return fileArray;\n      },\n      [] as string[]\n    );\n  }\n\n  return entry;\n}\n\nexport default function parseEntry(entry: webpack.Configuration['entry']) {\n  if (typeof entry === 'string') {\n    return path.join(process.cwd(), entry);\n  }\n  if (Array.isArray(entry) || (typeof entry === 'object' && entry !== null)) {\n    return parseMultipleEntries(entry).join('\\n');\n  }\n\n  return entry;\n}\n"],"file":"parseEntry.js"}